{"componentChunkName":"component---src-templates-blog-jsx","path":"/blog/revamp-dotfiles-20200923/","result":{"data":{"markdownRemark":{"fields":{"urlPath":"/blog/revamp-dotfiles-20200923/","jstDate":"2020-09-23"},"html":"<p>久々に開発環境のdotfilesを刷新したのでやったことのメモ。</p>\n<!--more-->\n<h2>きっかけ</h2>\n<p>メルカリさんの開発ライブ実況に触発された。</p>\n<blockquote>\n<p><a href=\"https://engineering.mercari.com/blog/entry/mercari_codecast_1/\">【解説】開発ライブ実況 #1 (Vim / Go) 編 by メルペイ Architect チーム Backend エンジニア #mercari_codecast | メルカリエンジニアリング</a></p>\n</blockquote>\n<p>こういうコンテンツとっても好き。</p>\n<h2>主に改善したかったところ</h2>\n<ul>\n<li>\n<p>凝集度が低い</p>\n<ul>\n<li>\n<p>例えばHomebrewで入れるツールが <code class=\"language-text\">brew.sh</code> みたいなファイルにまとまっていて、付随する環境変数などの設定は別ファイルにあって…といった感じで凝集度が低いのが気に入らなかった</p>\n<ul>\n<li>現にもう入れていないツールの設定などが残っていたりで良くない状態だった</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>使えていないツールやkey bindが多かった</p>\n<ul>\n<li>ノイズになり便利で使うべきだったはずのものが埋もれてしまうので良くない</li>\n</ul>\n</li>\n</ul>\n<p>今回はすべての設定を把握している状態を目指し、定期的に掃除＆覚え直しがしやすい設計を目指しました。</p>\n<h2>方針</h2>\n<ul>\n<li>\n<p>shellは <code class=\"language-text\">zsh</code></p>\n<ul>\n<li><code class=\"language-text\">fish</code> も使ってみたいけど文法が違うのを許容するほどのモチベーションは湧いていない</li>\n</ul>\n</li>\n<li>\n<p>zshの設定ベースはprezto</p>\n<ul>\n<li><a href=\"https://github.com/sorin-ionescu/prezto\">sorin-ionescu/prezto: The configuration framework for Zsh</a></li>\n<li>これは引き続き。設定もしやすいし速度も特に困っていないので続投。</li>\n</ul>\n</li>\n<li>\n<p>aliasや暗黙的な挙動は使いすぎない</p>\n<ul>\n<li>preztoのmoduleも最低限。例えばpreztoのgitモジュールみたいに大量のaliasが設定されてしまうのは許容するけど、実用するaliasは基本的に自分で明示的に設定する。</li>\n</ul>\n</li>\n<li>\n<p>VimはNeovim</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/Shougo\">Shougo</a>さんの <code class=\"language-text\">de*</code> 系ツールは積極利用</p>\n<ul>\n<li>たまに互換性を失ったりバグが生じたりすることもあるけど速いし便利なので愛用している</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>grep系ツールを <a href=\"https://github.com/ggreer/the_silver_searcher\">ggreer/the_silver_searcher</a> から <a href=\"https://github.com/BurntSushi/ripgrep\">BurntSushi/ripgrep</a> に乗り換え。</p>\n<ul>\n<li>速いらしいので試しに。</li>\n</ul>\n</li>\n</ul>\n<h2>やったこと</h2>\n<p>とりあえず現時点（2020-09-22）でのリポジトリがこちら。</p>\n<blockquote>\n<p><a href=\"https://github.com/hori-ryota/dotfiles/tree/86f72179f49caa4016a5a86fb5fde31720287c83\">hori-ryota/dotfiles</a></p>\n</blockquote>\n<p>やってよかったことで参考になりそうなところをメモがてら紹介してみます。</p>\n<h3>凝集度を高めるためにインストール用スクリプトと設定ファイルをツールごとにまとめた</h3>\n<p><code class=\"language-text\">zsh/modules/</code> 以下に欲求ごとにディレクトリを切り、 <code class=\"language-text\">install.sh</code> と <code class=\"language-text\">export.zsh</code> をそれぞれ置くことで凝集度を高めています。</p>\n<p>インストール処理は <code class=\"language-text\">init.sh</code> で以下のようにすることで全ツールについて発火。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>init.sh</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">f</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">BASH_SOURCE</span><span class=\"token operator\">:-</span>$0}</span>\"</span><span class=\"token variable\">)</span></span>/zsh/modules/\"</span>*<span class=\"token string\">\"/install.sh\"</span>\n<span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Execute installation script <span class=\"token variable\">${f}</span>\"</span>\n  <span class=\"token function\">zsh</span> -c <span class=\"token string\">\"<span class=\"token variable\">${f}</span>\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Finish installation script <span class=\"token variable\">${f}</span>\"</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>また、 <code class=\"language-text\">export.zsh</code> についても <code class=\"language-text\">zsh/modules/export.zsh</code> で以下のように設定。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>zsh/modules/export.zsh</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">f</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">BASH_SOURCE</span><span class=\"token operator\">:-</span>$0}</span>\"</span><span class=\"token variable\">)</span></span>/\"</span>*<span class=\"token string\">\"/export.zsh\"</span>\n<span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token variable\">$f</span>\"</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>これをpreztoの <code class=\"language-text\">zprofile</code> から以下のように読み込むことで一括して読み込んでいます。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>zprofile</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.zsh/modules/export.zsh\"</span></code></pre></div>\n<p>凝集度を高めたおかげでどこで何が設定されているのかわからないものが全くなくなり、非常にやってよかったです。</p>\n<p>また、環境変数の設定はツールのインストール時にも必要なもの（Go系ツールをインストールするときの <code class=\"language-text\">$GOPATH</code> とか）もありますが、各 <code class=\"language-text\">install.sh</code> から各 <code class=\"language-text\">export.zsh</code> を読み込むようにすることで安心して実行できるようになりました。</p>\n<p>部分実行が気軽にできるようになったのでNode.jsなどのバージョン更新時も対応が楽です。</p>\n<p><code class=\"language-text\">export.zsh</code> が分割されていることによる読み込みのパフォーマンスは今のところは気になっていないですが、もし気になり始めたら各 <code class=\"language-text\">export.zsh</code> は結合して1ファイルにする処理を更新時に叩くフローを検討するつもりです。</p>\n<h3>Powerlevel9kからPowerlevel10kに変えた</h3>\n<p>昔も移行しようとして設定移植が面倒でやめたような気がしていたのですが、確認したら設定を変更せずに適用できるようだったのでpreztoの設定を書き換え。</p>\n<blockquote>\n<p><a href=\"https://github.com/romkatv/powerlevel10k\">romkatv/powerlevel10k: A Zsh theme</a></p>\n</blockquote>\n<p>問題なく動いている上、目に見えて速くなったのでやってよかったです。</p>\n<h3>vim-goをやめた</h3>\n<blockquote>\n<p><a href=\"https://github.com/fatih/vim-go\">fatih/vim-go: Go development plugin for Vim</a></p>\n</blockquote>\n<p>vim-goは素晴らしいツールなのですが、LSP (<a href=\"https://microsoft.github.io/language-server-protocol/\">Language Server Protocol</a>) である <a href=\"https://github.com/golang/tools/blob/master/gopls/README.md\">gopls</a> が充実してきたことで必要性が薄くなったため卒業しました。</p>\n<blockquote>\n<p><a href=\"https://github.com/golang/tools/blob/master/gopls/README.md\">gopls</a></p>\n</blockquote>\n<p>vim-goには充実した機能で長らく非常にお世話になっていたのですが、多機能なだけに依存ツールの変更への対応が荒れることもありLSPのwrapperとしての役割も含めてすべてを網羅する巨大ツールとして今後進めていくのは厳しいのかなーと見ています。</p>\n<p>今後は、基本的な機能はLSPを活用した上で、LSPにない機能のツールについては特化した小さなプラグインやスクリプトで対応していくのが良いかなーと思っています。</p>\n<p>とりあえず今のところは <code class=\"language-text\">goimports</code>, <code class=\"language-text\">gofmt</code> の自動発火についてはmattnさんの <a href=\"https://github.com/mattn/vim-goimports\">vim-goimports</a> を使い、テストは <a href=\"https://github.com/vim-test/vim-test\">vim-test/vim-test</a> を使っています。</p>\n<p>その他のツールについてはvim-testでも使われている <a href=\"https://github.com/tpope/vim-dispatch\">tpope/vim-dispatch</a> で発火しています。</p>\n<p>今のところ大きな不満はないですが、vim-testの <code class=\"language-text\">TestFile</code> では子パッケージまでテストを走らせてしまうためそこだけ調整しようかと思っています。</p>\n<h3>NeovimのSession機能を使い始めた</h3>\n<p>NeovimにはSession機能があり、今開いている画面の構成などの状態を保存して後ほど開き直すことができます。</p>\n<p>他のプロジェクト（リポジトリ）をちょっと確認して戻ってきたい、みたいなことが多いので、以下のような要件を満たす設定を整備してみました。</p>\n<ul>\n<li><a href=\"https://github.com/x-motemen/ghq\">x-motemen/ghq</a> で他のGit Repositoryを拾い、 <a href=\"https://github.com/Shougo/denite.nvim\">Shougo/denite.nvim</a> などのfuzzy finder系ツールで検索＆移動する</li>\n<li>移動時にSession機能を使い、移動元の状態を保存する</li>\n<li>移動時にSession機能を使い、移動先の状態を（存在したら）復元する</li>\n</ul>\n<p>行って戻ってきたらさっきの状態、また行ったらさっきの状態、って感じで往復できます。便利。</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/mercari_codecast?src=hash&amp;ref_src=twsrc%5Etfw\">#mercari_codecast</a> に触発されてvimのsession機能を本格的に導入してるのだけどめっちゃ便利だな〜<br><br>denite.nvimのvim-denite-ghqと組み合わせて、deniteでghq管理のプロジェクトを引いて、custom actionでcdとsessionファイルのload_or_createする感じで設定してみた。<br>複数リポジトリの開発捗りそう</p>&mdash; hori (@hori_ryota) <a href=\"https://twitter.com/hori_ryota/status/1299266075113132035?ref_src=twsrc%5Etfw\">August 28, 2020</a></blockquote>\n\n<p>Deniteとghqでの設定が以下。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>dein.toml</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>data_home <span class=\"token operator\">=</span> <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span>$XDG_DATA_HOME<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'~/.local/share'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> $XDG_DATA_HOME\n<span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>session_dir <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'denite_session_dir'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span>data_home <span class=\"token operator\">.</span> <span class=\"token string\">'/nvim/denite_session'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token function\">isdirectory</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span>session_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">call</span> <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span>session_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">session_file_name</span><span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">:</span>session_dir <span class=\"token operator\">.</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token function\">substitute</span><span class=\"token punctuation\">(</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span>target_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">'.vim'</span>\n<span class=\"token keyword\">endfunction</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">save_session</span><span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span>\n  execute <span class=\"token string\">'mksession! '</span> <span class=\"token operator\">.</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">session_file_name</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span>target_dir<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">load_or_create_session</span><span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>file_name <span class=\"token operator\">=</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">session_file_name</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span>target_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">filereadable</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span>file_name<span class=\"token punctuation\">)</span>\n    execute <span class=\"token string\">'source '</span> <span class=\"token operator\">.</span> s<span class=\"token punctuation\">:</span>file_name\n    <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">endif</span>\n  <span class=\"token keyword\">call</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">save_session</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span>target_dir<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">cdsession_action</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">call</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">save_session</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>target <span class=\"token operator\">=</span> a<span class=\"token punctuation\">:</span>context<span class=\"token punctuation\">[</span><span class=\"token string\">'targets'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span><span class=\"token builtin\">path</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">:</span>target<span class=\"token punctuation\">[</span><span class=\"token string\">'action__path'</span><span class=\"token punctuation\">]</span>\n  execute <span class=\"token string\">'cd '</span> <span class=\"token operator\">.</span> s<span class=\"token punctuation\">:</span><span class=\"token builtin\">path</span>\n  <span class=\"token keyword\">call</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">load_or_create_session</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span><span class=\"token builtin\">path</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n\n<span class=\"token keyword\">call</span> denite#custom#<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token string\">'directory'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cdsession'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s:cdsession_action'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>current directoryごとにSessionを保存し、Deniteでの移動時に移動元の保存と移動先の復元をしています。</p>\n<p>また、廃棄したくなることもあるので以下のような掃除処理も仕込んでいます。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>dein.toml</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_session</span><span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>file_name <span class=\"token operator\">=</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">session_file_name</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span>target_dir<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">filewritable</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span>file_name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">call</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span>file_name<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">endif</span>\n<span class=\"token keyword\">endfunction</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_session_action</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span>target <span class=\"token operator\">=</span> a<span class=\"token punctuation\">:</span>context<span class=\"token punctuation\">[</span><span class=\"token string\">'targets'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span> s<span class=\"token punctuation\">:</span><span class=\"token builtin\">path</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">:</span>target<span class=\"token punctuation\">[</span><span class=\"token string\">'action__path'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">call</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_session</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span><span class=\"token builtin\">path</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n<span class=\"token keyword\">call</span> denite#custom#<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token string\">'directory'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clean_session'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s:clean_session_action'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'is_quit'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_sessions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">call</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rm '</span> <span class=\"token operator\">.</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">session_file_name</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_sessions_action</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">call</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">clean_sessions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endfunction</span>\n<span class=\"token keyword\">call</span> denite#custom#<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token string\">'directory'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'clean_allsession'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s:clean_sessions_action'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'is_quit'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>vimscript扱い慣れてはいない＆自分用なのでしっかりしたデバッグはしていないですが、とりあえず期待通り動いています。</p>\n<p>自分は作業の区切りですぐにまっさらな状態に掃除しちゃいたい派なのでNeovim起動時にSession復元などはしておらず、起動ディレクトリごとに保存先を分けたり命名管理などもせずに気軽に上書きしています。</p>\n<p>この辺は好みがあると思うので良きに調整してください。</p>\n<h2>以上</h2>\n<p>今回は凝集度アップとスリム化が主目的だったのであまり新しく入れたものは無いのですが、やってよかった感は強かったので良かったことをメモしてみました。</p>\n<p>もし参考になれば嬉しいです。また、おすすめの設定などあればぜひ紹介してください。</p>","excerpt":"久々に開発環境のdotfilesを刷新したのでやったことのメモ。","frontmatter":{"date":"2020-09-23T00:00:00+09:00","title":"dotfilesを刷新した（2020-09）","tags":["Development","Shell","NeoVim","Vim"],"eyecatch":null}}},"pageContext":{"urlPath":"/blog/revamp-dotfiles-20200923/","previous":{"fields":{"urlPath":"/blog/revamp-blog-with-gatsby-and-bulma/","jstDate":"2020-09-22"},"frontmatter":{"title":"Gatsby.jsとBulmaでブログをリニューアルした","date":"2020-09-22"}},"next":null}},"staticQueryHashes":["1862978031","277821901","4270455655"]}