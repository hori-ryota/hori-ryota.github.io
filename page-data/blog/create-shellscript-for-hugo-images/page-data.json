{"componentChunkName":"component---src-templates-blog-jsx","path":"/blog/create-shellscript-for-hugo-images/","result":{"data":{"markdownRemark":{"fields":{"urlPath":"/blog/create-shellscript-for-hugo-images/"},"html":"<p>CMS ではなく Markdown で記事を作成していると画像周りがどうにもダルいのでスクリプト化しました。</p>\n<p>自分用のオレオレ処理ですが、貼っておけば何かの役に立つかもしれないので残しておきます。</p>\n<!--more-->\n<h2>準備</h2>\n<p>画像の編集をするのに <a href=\"https://www.imagemagick.org/script/index.php\">ImageMagick</a> が必要です。</p>\n<p>また、画像の最適化では</p>\n<ul>\n<li><a href=\"https://github.com/tjko/jpegoptim\">tjko/jpegoptim</a></li>\n<li><a href=\"https://pngquant.org/\">pngquant</a></li>\n</ul>\n<p>を使っています。それぞれ Mac であれば Homebrew で入れられるかと思います。</p>\n<h2>構成</h2>\n<p>build 用のファイルなどを除くとざっくりこんな感じのディレクトリ構成で Hugo を使っています。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>hugo-files</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">▸ content/post/\n▸ data/\n▸ layouts/\n▸ static/images/\n▸ static_src/images/\n▸ themes/\n  addImage.sh*\n  config.toml\n  createBanner.sh*\n  createImageWithText.sh*\n  imageOptim.sh*</code></pre></div>\n<p><code class=\"language-text\">static/images/</code> 以下に post の slug と同じディレクトリを作成し、その中に記事の画像をまとめて入れています。</p>\n<p>画像は圧縮などの最適化を行ってから使用するので、元データは <code class=\"language-text\">static_src/images/</code> にバックアップしています。</p>\n<h2>スクリプト</h2>\n<p>スクリプトは以下の4つを使用しています。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>scripts</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">addImage.sh\ncreateBanner.sh\ncreateImageWithText.sh\nimageOptim.sh</code></pre></div>\n<h3><code class=\"language-text\">createImageWithText.sh</code></h3>\n<p><code class=\"language-text\">createImageWithText.sh</code> は以前作った画像の上に黒帯背景で白文字を描画するためのスクリプトです。</p>\n<p>サムネイルで楽をするために使っています。</p>\n<blockquote>\n<p><a href=\"/blog/create-blackband-image\">ImageMagick で黒帯背景に白文字を載せた画像を生成するシェル芸</a></p>\n</blockquote>\n<h3><code class=\"language-text\">addImage.sh</code></h3>\n<p><code class=\"language-text\">addImage.sh</code> は画像を Hugo の構成内に追加するときに叩くスクリプトです。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">addImage.sh src title name</code></pre></div>\n<p>のフォーマットで、</p>\n<ul>\n<li><code class=\"language-text\">src</code> : 元画像</li>\n<li><code class=\"language-text\">title</code> : Hugo の slug</li>\n<li><code class=\"language-text\">name</code> : 画像の名前（拡張子は不要）</li>\n</ul>\n<p>です。</p>\n<p><code class=\"language-text\">src</code> に指定した画像を <code class=\"language-text\">static/images/</code> <code class=\"language-text\">static_src/images/</code> に入れた上で、 <code class=\"language-text\">static/images/</code> の方には最適化を行います。</p>\n<p>なお、 blog に吐いたデータだけでなく作成用のリポジトリ自体も GitHub に上げているので、 <code class=\"language-text\">static_src/images/</code> に入れるバックアップ用の画像も <code class=\"language-text\">convert</code> の <code class=\"language-text\">-strip</code> オプションで Exif 情報を削っています。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>addImage.sh</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token builtin class-name\">set</span> -u\n\n<span class=\"token assign-left variable\">usage</span><span class=\"token operator\">=</span><span class=\"token string\">\"Usage: addImage.sh src title name\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$#</span> -eq <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$usage</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token assign-left variable\">title</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span>\n<span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$3</span>\"</span>\n<span class=\"token assign-left variable\">ext</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${src<span class=\"token operator\">##</span>*.}</span>\"</span>\n\n<span class=\"token assign-left variable\">dstDir</span><span class=\"token operator\">=</span><span class=\"token string\">\"static/images/<span class=\"token variable\">${title}</span>\"</span>\n<span class=\"token assign-left variable\">dst</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${dstDir}</span>/<span class=\"token variable\">${name}</span>.<span class=\"token variable\">${ext}</span>\"</span>\n<span class=\"token assign-left variable\">backupDir</span><span class=\"token operator\">=</span><span class=\"token string\">\"static_src/images/<span class=\"token variable\">${title}</span>\"</span>\n<span class=\"token assign-left variable\">backup</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${backupDir}</span>/<span class=\"token variable\">${name}</span>.<span class=\"token variable\">${ext}</span>\"</span>\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token string\">\"<span class=\"token variable\">$dstDir</span>\"</span>\n<span class=\"token function\">mkdir</span> -p <span class=\"token string\">\"<span class=\"token variable\">$backupDir</span>\"</span>\n\nconvert <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span> -strip <span class=\"token string\">\"<span class=\"token variable\">$backup</span>\"</span>\nconvert <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span> -strip <span class=\"token string\">\"<span class=\"token variable\">$dst</span>\"</span>\n\n./imageOptim.sh <span class=\"token string\">\"<span class=\"token variable\">$dst</span>\"</span></code></pre></div>\n<p>本当は引数ではなくオプションを取るようにしたほうが汎用性が高いのですが、自分でゴリゴリ使う用なので及第点としています。</p>\n<p><code class=\"language-text\">cp</code> ではなく <code class=\"language-text\">-strip</code> 付きの <code class=\"language-text\">convert</code> で <code class=\"language-text\">src</code> から画像を複製しているので、 <code class=\"language-text\">src</code> はファイルパスだけでなく URL でも取れるようになっています。</p>\n<h3><code class=\"language-text\">imageOptim.sh</code></h3>\n<p><code class=\"language-text\">imageOptim.sh</code> は画像の最適化を行うスクリプトです。</p>\n<p>拡張子をファイル名から判別して</p>\n<ul>\n<li><a href=\"https://github.com/tjko/jpegoptim\">tjko/jpegoptim</a></li>\n<li><a href=\"https://pngquant.org/\">pngquant</a></li>\n</ul>\n<p>で圧縮しています。対応しているのは <code class=\"language-text\">jpg</code> <code class=\"language-text\">png</code> です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mogrify -resize &#39;2560x1440&gt;&#39; &quot;$1&quot;</code></pre></div>\n<p>で <code class=\"language-text\">2560x1440</code> から縦横のどちらかでもはみ出たら、アスペクト比を保ちつつ収まるサイズに縮小しています。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>imageOptim.sh</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token builtin class-name\">set</span> -u\n\n<span class=\"token assign-left variable\">usage</span><span class=\"token operator\">=</span><span class=\"token string\">\"Usage: imageOptim.sh src\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">resize</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$#</span> -eq <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"resize() needs 1 args\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">fi</span>\n  mogrify -resize <span class=\"token string\">'2560x1440>'</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$#</span> -eq <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$usage</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token assign-left variable\">ext</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${src<span class=\"token operator\">##</span>*.}</span>\"</span>\n\n<span class=\"token assign-left variable\">beforeSize</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">wc</span> -c <span class=\"token operator\">&lt;</span><span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"optimize image: <span class=\"token variable\">$src</span>\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token string\">'jpg'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  resize <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span>\n  jpegoptim --strip-all --max<span class=\"token operator\">=</span><span class=\"token number\">90</span> <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token string\">'png'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  resize <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span>\n  pngquant --ext <span class=\"token string\">\".<span class=\"token variable\">${ext}</span>\"</span> --force --speed <span class=\"token number\">1</span> <span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"unknown filetype <span class=\"token variable\">$ext</span>\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">afterSize</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">wc</span> -c <span class=\"token operator\">&lt;</span><span class=\"token string\">\"<span class=\"token variable\">$src</span>\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"optimize image: optimized <span class=\"token variable\">${beforeSize}</span> to <span class=\"token variable\">${afterSize}</span> (<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">\\</span>* $afterSize / $beforeSize<span class=\"token variable\">)</span></span>%)\"</span></code></pre></div>\n<h3><code class=\"language-text\">createBanner.sh</code></h3>\n<p><code class=\"language-text\">createBanner.sh</code> は src 画像からサムネイルを作って画像追加までを行う、最もオレオレなスクリプトです。</p>\n<p>一時ファイルの処理が甘いのですが、使い方の参考にはなると思うので気にせず載せます。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>createBanner.sh</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token builtin class-name\">set</span> -u\n\n<span class=\"token assign-left variable\">usage</span><span class=\"token operator\">=</span><span class=\"token string\">\"createBanner.sh src.jpg 'title' 'text'\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$#</span> -eq <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$usage</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">srcImage</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token assign-left variable\">title</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span>\n<span class=\"token assign-left variable\">text</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$3</span>\"</span>\n<span class=\"token assign-left variable\">ext</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${srcImage<span class=\"token operator\">##</span>*.}</span>\"</span>\n\n<span class=\"token comment\"># conf</span>\n<span class=\"token assign-left variable\">aspectX</span><span class=\"token operator\">=</span><span class=\"token number\">16</span>\n<span class=\"token assign-left variable\">aspectY</span><span class=\"token operator\">=</span><span class=\"token number\">9</span>\n<span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"banner\"</span>\n\n<span class=\"token assign-left variable\">size</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">$(</span>identify -format <span class=\"token string\">\"%w %h\"</span> <span class=\"token string\">\"<span class=\"token variable\">$srcImage</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token assign-left variable\">srcW</span><span class=\"token operator\">=</span><span class=\"token variable\">${size<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span>\n<span class=\"token assign-left variable\">srcH</span><span class=\"token operator\">=</span><span class=\"token variable\">${size<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>}</span>\n\n<span class=\"token assign-left variable\">tmp1</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp <span class=\"token string\">\"/tmp/<span class=\"token variable\">${0<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>.<span class=\"token variable\">${srcImage<span class=\"token operator\">/</span><span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>_}</span>.<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>.tmp1.tmp.<span class=\"token variable\">${ext}</span>\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token comment\"># TODO trap rm</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcH <span class=\"token punctuation\">\\</span>* $aspectX<span class=\"token variable\">)</span></span> -gt <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcW <span class=\"token punctuation\">\\</span>* $aspectY<span class=\"token variable\">)</span></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token comment\"># crop height</span>\n  <span class=\"token assign-left variable\">w</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcW - $srcW % $aspectX<span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $w / <span class=\"token number\">16</span> <span class=\"token punctuation\">\\</span>* <span class=\"token number\">9</span><span class=\"token variable\">)</span></span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$w</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$h</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$tmp1</span>\n  convert <span class=\"token string\">\"<span class=\"token variable\">$srcImage</span>\"</span> -gravity center -crop <span class=\"token string\">\"<span class=\"token variable\">${w}</span>x<span class=\"token variable\">${h}</span>+0+0\"</span> <span class=\"token string\">\"<span class=\"token variable\">$tmp1</span>\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcH <span class=\"token punctuation\">\\</span>* $aspectX<span class=\"token variable\">)</span></span> -lt <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcW <span class=\"token punctuation\">\\</span>* $aspectY<span class=\"token variable\">)</span></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token comment\"># crop width</span>\n  <span class=\"token assign-left variable\">h</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $srcH - $srcH % $aspectY<span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">w</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $h / <span class=\"token number\">9</span> <span class=\"token punctuation\">\\</span>* <span class=\"token number\">16</span><span class=\"token variable\">)</span></span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$w</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$h</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$tmp1</span>\n  convert <span class=\"token string\">\"<span class=\"token variable\">$srcImage</span>\"</span> -gravity center -crop <span class=\"token string\">\"<span class=\"token variable\">${w}</span>x<span class=\"token variable\">${h}</span>+0+0\"</span> <span class=\"token string\">\"<span class=\"token variable\">$tmp1</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">tmp2</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp <span class=\"token string\">\"/tmp/<span class=\"token variable\">${0<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>.<span class=\"token variable\">${srcImage<span class=\"token operator\">/</span><span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>_}</span>.<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span><span class=\"token variable\">)</span></span>.tmp2.tmp.<span class=\"token variable\">${ext}</span>\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token comment\"># TODO trap rm</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"srcImage = <span class=\"token variable\">$srcImage</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"text = <span class=\"token variable\">$text</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"tmp1 = <span class=\"token variable\">$tmp1</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"tmp2 = <span class=\"token variable\">$tmp2</span>\"</span>\n\n./createImageWithText.sh <span class=\"token string\">\"<span class=\"token variable\">$tmp1</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$text</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$tmp2</span>\"</span>\n./addImage.sh <span class=\"token string\">\"<span class=\"token variable\">$tmp2</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$title</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$name</span>\"</span>\n\n<span class=\"token function\">rm</span> -f <span class=\"token string\">\"<span class=\"token variable\">$tmp1</span>\"</span>\n<span class=\"token function\">rm</span> -f <span class=\"token string\">\"<span class=\"token variable\">$tmp2</span>\"</span></code></pre></div>\n<p>中央らへんのごちゃごちゃと計算しているところがややこしいですね。</p>\n<p>アスペクト比を <code class=\"language-text\">16:9</code> にするためにどちらが長いかを計算してはみ出たところを中央から <code class=\"language-text\">crop</code> しています。</p>\n<p><code class=\"language-text\">16:9</code> にしたものを <code class=\"language-text\">$tmp1</code> に保存し、 <code class=\"language-text\">createImageWithText.sh</code> で文字を入れてサムネ化したものを <code class=\"language-text\">$tmp2</code> に保存。</p>\n<p>生成された文字入り画像 <code class=\"language-text\">$tmp2</code> を元画像として <code class=\"language-text\">addImage.sh</code> で画像を追加しています。</p>\n<h2>以上</h2>\n<p>CMS ではアップロードするだけでいいのに Hugo では色々と自分で作業しなければいけない画像の追加が自動化できたので、とりあえず満足です。</p>\n<p><a href=\"https://github.com/Shougo/deoplete.nvim\">Shougo/deoplete.nvim</a> や <a href=\"https://github.com/Shougo/denite.nvim\">Shougo/denite.nvim</a> のソースとして画像を取得できるようにすると便利そうな気配がするので、気が向いたらやります。</p>\n<p><code class=\"language-text\">addImage.sh</code> の出力を image の path にして <code class=\"language-text\">pbcopy</code> するくらいでも良いかもしれないですね。</p>","excerpt":"CMS ではなく Markdown で記事を作成していると画像周りがどうにもダルいのでスクリプト化しました。 自分用のオレオレ処理ですが、貼っておけば何かの役に立つかもしれないので残しておきます。","frontmatter":{"date":"2017-01-31","title":"Hugo のサムネ作成、画像追加、画像最適化を自動化するシェル芸","tags":["Development","Shell","ImageMagick","Hugo","Created"],"eyecatch":null}}},"pageContext":{"urlPath":"/blog/create-shellscript-for-hugo-images/","previous":{"fields":{"urlPath":"/blog/create-blackband-image/"},"frontmatter":{"title":"ImageMagick で黒帯背景に白文字を載せた画像を生成するシェル芸","date":"2017-01-29"}},"next":{"fields":{"urlPath":"/blog/qulassification-csv-with-q/"},"frontmatter":{"title":"CSV を SQL で扱える 'q' を使って数値データのランク分け芸","date":"2017-02-03"}}}},"staticQueryHashes":["2432199166","277821901","3202776293"]}